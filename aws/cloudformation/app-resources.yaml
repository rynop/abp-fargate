AWSTemplateFormatVersion: '2010-09-09'

Description: example ecs task role with permissions to get env out of SSM. Also shows how to connect to aurora in vpc

Parameters:
  EcsCfClusterStackName:
    Type: String
    Description: value of EcsCfClusterStackName in vpc-ecs-cluster.yaml cloudformation stack (ends with --ecs-cluster)

  NestedStacksS3Bucket:
    Description: The name of the versioned S3 bucket you created to hold nested stack temlpates
    Type: String
    Default: YourAWSBlueprintNestedStacksBucket

  DbName:
    Description: The Db name
    Type: String
    MinLength: 1
    MaxLength: 64
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DbUsername:
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: must be between 1 to 16 alphanumeric characters.
    Description: The Db admin account user name, between 1 to 16 alphanumeric characters.
    MaxLength: 16
    MinLength: 1
    Type: String
  DbPassword:
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: must be between 8 to 41 alphanumeric characters.
    Description: The Db admin account password, between 8 to 41 alphanumeric characters.
    MaxLength: 41
    MinLength: 8
    NoEcho: true
    Type: String
  DbInstanceClass:
    Default: db.t2.small
    Type: String
    Description: 'Db instance class'
    ConstraintDescription: DB instance class not supported
    AllowedValues:
      - db.t2.small
      - db.t2.medium
      - db.t2.xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge

  DbCreateReplicaInstance:
    Default: false
    Type: String
    Description: Create multiple instances for HA
    ConstraintDescription: Only true or false are allowed
    AllowedValues:
      - true
      - false

  DbAlarmMaxCpuPercent:
    Description: Db CPU % max for alarm
    Type: Number
    Default: 80
    MinValue: 1
    MaxValue: 99
    ConstraintDescription: Must be a percentage between 1-99%

  DbAlarmReadLatencyMaxSeconds:
    Description: Read latency max for alarm
    Type: Number
    Default: 1
    MinValue: 1

  DbAlarmWriteLatencyMaxSeconds:
    Description: Write latency max for alarm
    Type: Number
    Default: 1
    MinValue: 1

  DbAlarmEvaluationPeriods:
    Description: The number of periods over which data is compared to the specified threshold
    Type: Number
    Default: 2
    MinValue: 2

  DbAlarmEvaluationPeriodSeconds:
    Description: The time over which the specified statistic is applied. Specify time in seconds, in multiples of 60. Enhanced monitoring must be enabled if less than 500 seconds
    Type: Number
    Default: 300
    MinValue: 60
    ConstraintDescription: Must be at least 60 seconds

  DbEnhancedMonitoring:
    Default: false
    Type: String
    Description: The optional flag for enhanced monitoring (additional charges apply - https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html)
    ConstraintDescription: Only true or false are allowed
    AllowedValues:
      - true
      - false

  # Default is 200 MB
  DbAlarmSwapUsageInBytes:
    Default: 209715200
    Type: Number
    Description: Number of swap usage bytes for alarm (if enabled - Aurora MySQL only)
    MinValue: 1
    ConstraintDescription: Enter a value of at least one byte

  DbEnableAlarms:
    Default: false
    Type: String
    Description: Set to true to enable (additional charges - https://aws.amazon.com/cloudwatch/pricing/ - currently, Aurora MySQL only)
    ConstraintDescription: Only true or false are allowed
    AllowedValues:
      - true
      - false

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Stack config'
        Parameters:
          - EcsCfClusterStackName
          - NestedStacksS3Bucket
      - Label:
          default: 'Aurora config'
        Parameters:
          - DbName
          - DbUsername
          - DbPassword
          - DbInstanceClass
          - DbCreateReplicaInstance
          - DbAlarmMaxCpuPercent
          - DbAlarmReadLatencyMaxSeconds
          - DbAlarmWriteLatencyMaxSeconds
          - DbAlarmEvaluationPeriods
          - EnhancedMonitoring
          - DbAlarmSwapUsageInBytes
          - DbEnableAlarms
          - DbAlarmEvaluationPeriodSeconds
          - DbEnhancedMonitoring

Conditions:
  CreateStagingResources:
    !Equals [!Select ['0', !Split ['--', !Ref 'AWS::StackName']], prod]

Mappings:
  NestedStacks:
    infrastructure:
      'aurora': 'rds/aurora.yaml?versionid=YourS3VersionId'

Resources:
  EcsTaskRole:
    Type: AWS::IAM::Role
    DeletionPolicy: 'Delete' #TODO: https://forums.aws.amazon.com/post!post.jspa?forumID=92&threadID=152800&messageID=859017&reply=true
    Properties:
      AssumeRolePolicyDocument:
        Version: 2008-10-17
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: '/'
      Policies:
        - PolicyName: !Join ['-', [!Ref 'AWS::StackName', 'service', 'policy']]
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'iam:PassRole'
                  - 'ssm:DescribeParameters'
                  - 'ssm:GetParametersByPath'
                Effect: Allow
                Resource: '*'
              - Action: #see https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-access.html
                  - 'ssm:GetParameter*'
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:ssm:*:${AWS::AccountId}:parameter/*'
              - Effect: Allow
                Action:
                  - 'sns:Get*'
                Resource: '*'
        - PolicyName: S3Access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 's3:*'
                Effect: Allow
                Resource:
                  - !GetAtt SampleS3Bucket.Arn
                  - !Sub
                    - '${bucketArn}*'
                    - { bucketArn: !GetAtt SampleS3Bucket.Arn }

  ####S3
  SampleS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: 'Delete' #TODO: https://forums.aws.amazon.com/post!post.jspa?forumID=92&threadID=152800&messageID=859017&reply=true
    Properties:
      BucketName: !Sub
        - ${AWS::Region}--${Stage}--${Branch}--abpfargate.awsblueprint.io
        - {
            Stage: !Select ['0', !Split ['--', !Ref 'AWS::StackName']],
            Branch: !Select ['2', !Split ['--', !Ref 'AWS::StackName']],
          }
      # ReplicationConfiguration:
      #   Role: !GetAtt [WorkItemBucketBackupRole, Arn]
      #   Rules:
      #   - Destination:
      #       Bucket: !Join ['', ['arn:aws:s3:::', !Join ['-', [!Ref 'AWS::Region', !Ref 'AWS::StackName', replicationbucket]]]]
      #       StorageClass: STANDARD
      #     Id: Backup
      #     Prefix: ''
      #     Status: Enabled
      VersioningConfiguration:
        Status: Enabled
  ####End S3

  ####Aurora
  AuroraVPCSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DeletionPolicy: 'Delete' #TODO: https://forums.aws.amazon.com/post!post.jspa?forumID=92&threadID=152800&messageID=859017&reply=true
    Properties:
      VpcId:
        Fn::ImportValue: !Sub '${EcsCfClusterStackName}-VPC'
      GroupDescription: Access aurora in VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-aurora-access
        - Key: Stage
          Value: !Sub
            - ${Stage}
            - { Stage: !Select ['0', !Split ['--', !Ref 'AWS::StackName']] }

  # Allow access from ec2 instance in this security group (ex: so we can use ec2 jumpoint to use mysql client from home)
  AuroraVpcSecurityGroupInboundRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      SourceSecurityGroupId: !Ref AuroraVPCSecurityGroup
      GroupId: !Ref AuroraVPCSecurityGroup

  Aurora:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: 'Delete' #TODO: https://forums.aws.amazon.com/post!post.jspa?forumID=92&threadID=152800&messageID=859017&reply=true
    DependsOn: AuroraVPCSecurityGroup
    Properties:
      TemplateURL: !Sub
        - https://s3.${AWS::Region}.amazonaws.com/${NestedStacksS3Bucket}/nested-stacks/${url}
        - { url: !FindInMap [NestedStacks, infrastructure, aurora] }
      Parameters:
        DatabaseSecurityGroupId: !Ref AuroraVPCSecurityGroup
        DatabaseSubnets:
          Fn::ImportValue: !Sub '${EcsCfClusterStackName}-PrivateSubnets'
        DatabaseName: !Ref DbName
        DatabaseUser: !Ref DbUsername
        DatabasePassword: !Ref DbPassword
        DatabaseEngine: 'aurora'
        EncryptionAtRest: 'true'
        DatabaseInstanceClass: !Ref DbInstanceClass
        CreateReplicaInstance: !Ref DbCreateReplicaInstance
        DatabaseAlarmMaxCpuPercent: !Ref DbAlarmMaxCpuPercent
        DatabaseAlarmReadLatencyMaxSeconds: !Ref DbAlarmReadLatencyMaxSeconds
        DatabaseAlarmWriteLatencyMaxSeconds: !Ref DbAlarmWriteLatencyMaxSeconds
        DatabaseAlarmEvaluationPeriods: !Ref DbAlarmEvaluationPeriods
        DatabaseAlarmEvaluationPeriodSeconds: !Ref DbAlarmEvaluationPeriodSeconds
        EnhancedMonitoring: !Ref DbEnhancedMonitoring
        DatabaseAlarmSwapUsageInBytes: !Ref DbAlarmSwapUsageInBytes
        EnableAlarms: !Ref DbEnableAlarms
        Stage: !Sub
          - ${Stage}
          - { Stage: !Select ['0', !Split ['--', !Ref 'AWS::StackName']] }
####End Aurora

Outputs:
  TaskIamRoleArn:
    Description: The IAM role for ECS task
    Value: !Sub arn:aws:iam::${AWS::AccountId}:role/${EcsTaskRole}

  AuroraVPCSecurityGroup:
    Description: AuroraVPCSecurityGroup
    Value: !Ref AuroraVPCSecurityGroup
